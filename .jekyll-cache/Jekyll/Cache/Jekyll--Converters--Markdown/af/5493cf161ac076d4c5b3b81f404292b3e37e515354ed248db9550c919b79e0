I"	<h1 id="wip">WIP!</h1>

<h4 id="introduction">Introduction</h4>
<p>After sieving through the sxmo-utils, i started thinking about the structure of sxmo and how the scripts are executed and loaded, which lead me into a journey of rethinking my own dotfiles, i’ll talk about that in detail in this blogpost. i’ve rewritten the filepaths and -names to fit in the context of sxmo.</p>

<h2 id="abstract">abstract</h2>
<p>why? customizing, uncluttering, reusability and easily overwrite functions in you own configs</p>

<h2 id="etcprofilesd-and-the-profile">/etc/profiles.d/ and the .profile</h2>
<p>to have systemwide access to the functions i decided to go for /etc/profile.d/. when you put a script in there it gets source on login, but only once, so if you change anything there you have to relogin.</p>
<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>-&gt; % <span class="nb">cat</span> /etc/profile.d/sxmo.sh
<span class="c">#!/usr/bin/env sh</span>
<span class="nb">.</span> /usr/share/sxmo/.profile
</code></pre></div></div>
<h2 id="so-our-functions-are-sourced-via-profile-everything-should-just-work-right-no">so our functions are sourced via .profile everything should just work, right? no!</h2>
<p>a problem i immediatly encountered is that the .profile isnt sourced in a non-interactive shell.
which means, running following commands won’t work without sourcing the functions again, as seen below.
also programs like dmenu, sxkhdm, xinit and so on, can run those functions nicely without sourcing the .profile again.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code> myfunction
</code></pre></div></div>
<p>i dont like sourcing files over and over again, so i came up with, what i think is, a rather clever solution.
first of all i created a bin directory in /usr/share/sxmo which i put into the $PATH in .profile so binaries there are executable.
binaries can be executed also in a non-interactive context and with this magical <a href="">run_function</a> script and symlinks to it, it is
possible to simply run any of our functions in a non-interactive way</p>

<h1 id="links">Links</h1>

<ul>
  <li><a href="https://github.com/dni/dotfiles/tree/sxmo">dotfiles</a></li>
  <li>IRC: #sxmo on irc.oftc.net</li>
</ul>
:ET